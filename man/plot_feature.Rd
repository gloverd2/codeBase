% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_feature.R
\name{plot_feature}
\alias{plot_feature}
\title{plot_feature}
\usage{
plot_feature(
  feature,
  target,
  n_bins = 10,
  weight = rep(1, length(feature)),
  split = rep("feature", length(feature)),
  feature_name = "feature",
  split_name = "split",
  exposure_type = "pdf",
  use_plotly = TRUE
)
}
\arguments{
\item{feature}{- vector of feature values. Can be numeric, character or factor}

\item{target}{- vector of target. Must be numeric}

\item{n_bins}{- integer Number of bins to split feature into}

\item{weight}{- vector of weights. Default is even weights}

\item{split}{- optional: vector of categories, can be NB vs RN ect}

\item{feature_name}{- optional: used for title of plots}

\item{exposure_type}{- character. either \code{'pdf'} or \code{'count'}. Method used to plot exposure}

\item{use_plotly}{- logical. If \code{TRUE} plotly engine is used. If false ggplot is used}
}
\value{
plotly or ggplot object
}
\description{
returns a plot showing the distribution of a feature also showing how the target changes across the feature
}
\examples{

plot_feature(feature=seq(1,25), target=runif(25))
plot_feature(feature=seq(1,50), target=runif(50), split=rep(c("NB","RN"), each=25))
plot_feature(feature=seq(1,25), target=runif(25), exposure_type="count")
plot_feature(feature=rnorm(100) , target=runif(100))
plot_feature(feature=rnorm(100), target=runif(100), exposure_type="count")
plot_feature(feature=rnorm(1000), target=runif(1000), split=sample(c("a", "b", "c"), 1000, replace = TRUE, prob=c(0.5, 0.3, 0.2)))
plot_feature(feature=c(rnorm(900), rep(c(999, NA),50)), target=runif(1000), split=sample(c("a", "b", "c"), 1000, replace = TRUE, prob=c(0.5, 0.3, 0.2)))

plot_feature(feature=c(rnorm(100), -999,999), target=runif(102), exposure_type="pdf")
plot_feature(feature=c(NA, seq(1,24)), target=runif(25), exposure_type="count")
plot_feature(feature=c(NA, seq(1,23), 999), target=runif(25), exposure_type="pdf")
plot_feature(feature=rep(c("a", "b", "c", "d", "e"), 5), target=runif(25))
plot_feature(feature=rep(c("a", "b", "c", "d", NA), 5), target=runif(25))
plot_feature(feature=rep(c("a", "b", "c", "d", NA), 5), target=runif(25), split=sample(c("a", "b", "c"), 25, replace = TRUE, prob=c(0.5, 0.3, 0.2)))

}
