% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_lift_curve_relative.R
\name{plot_lift_curve_relative}
\alias{plot_lift_curve_relative}
\title{plot_lift_curve_relative}
\usage{
plot_lift_curve_relative(
  actual,
  incumbent_pred,
  proposed_pred,
  weight = rep(1, length(actual)),
  title = NULL,
  n_bins = 10,
  method = "even_weight",
  use_labels = TRUE,
  mean = 0.5,
  sd = 0.3,
  incumbent_label = "Incumbent",
  proposed_label = "Proposed",
  use_plotly = TRUE,
  rebase = FALSE
)
}
\arguments{
\item{actual}{Array[Numeric] - Values we are aiming to predict.}

\item{incumbent_pred}{Array[Numeric] - Values that we have predicted by the incumbent model. Incumbent is the current model looking to be replaced.}

\item{proposed_pred}{Optional: String - Text to use to label the proposed predictions.}

\item{weight}{Optional: Array[Numeric] - Weighting of predictions. If NULL even weighting is used.}

\item{title}{Optional: String - Title for the plot.}

\item{n_bins}{numeric - Number of bins to split exposure into}

\item{method}{string - One of \code{c("even_weight", "gaussian_weight")}.
If \code{"even_weight"} is used the weight (exposure) in each bucket is even
If \code{"gaussian_weight"} is used the weight look like a normal distribution centered on \code{mean} with width \code{sd}. The effect of this is to give thinner tails}

\item{use_labels}{logical - should the bins be numbered (\code{FALSE}) or human readable label such as [1 - 7] (\code{TRUE})}

\item{mean}{numeric - Only used when \code{method}=\code{"gaussian_weight"} - value between 0 - 1 for if the bucket with maximum weight is at min or max prediction. Default is 0.5 (middle bucket)}

\item{sd}{numeric - Only used when \code{method}=\code{"gaussian_weight"} - value between 0.1 - 1 for how thin the distribution tails should be. Low numbers give thin tails}

\item{incumbent_label}{Optional: String - Text to use to label the incumbent predictions.}

\item{use_plotly}{Optional: boolean - If TRUE plotly object is returned else ggplot2 object.}

\item{rebase}{boolean - If TRUE multiplicative shift is used to rebase average prediction and actuals}
}
\value{
plotly/ggplot object of showing relative lift curve for given pair of predictions
}
\description{
Buckets data into groups using the difference in predicted values (\code{proposed_pred} - \code{incumbent_pred}) (see \code{\link{prep_num_bin}}) and finds average predictions and actual in each bucket.

Note: Predictions should be annualised (independent of exposure)
}
\examples{

plot_lift_curve_relative(actual=1:100, incumbent_pred = seq(25,74.5,0.5) + rnorm(100, mean=0, sd = 10), proposed_pred=seq(1,100,1) + rnorm(100, mean=0, sd = 10), title="Example Lift Curve")
plot_lift_curve_relative(actual=1:100, incumbent_pred = seq(25,74.5,0.5) + rnorm(100, mean=0, sd = 10), proposed_pred=seq(1,100,1) + rnorm(100, mean=0, sd = 10), title="Example Lift Curve", method="gaussian_weight")
plot_lift_curve_relative(actual=1:100, incumbent_pred = seq(25,74.5,0.5) + rnorm(100, mean=0, sd = 10), proposed_pred=seq(1,100,1) + rnorm(100, mean=0, sd = 10), title="Example Lift Curve", use_plotly=FALSE)
plot_lift_curve_relative(actual=1:100, incumbent_pred = seq(25,74.5,0.5) + rnorm(100, mean=0, sd = 10), proposed_pred=seq(1,100,1) + rnorm(100, mean=0, sd = 10), title="Example Lift Curve", method="gaussian_weight", use_plotly=FALSE)

}
