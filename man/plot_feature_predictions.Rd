% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_feature_predictions.R
\name{plot_feature_predictions}
\alias{plot_feature_predictions}
\title{plot_feature_predictions}
\usage{
plot_feature_predictions(
  feature,
  feature_name,
  actual,
  prediction,
  weight = rep(1, length(feature)),
  exposure_type = "pdf",
  n_bins = 10,
  use_plotly = TRUE
)
}
\arguments{
\item{feature}{- vector of factor to be plotted over}

\item{feature_name}{- Name of factor to be plotted over. Will be used to label plots}

\item{actual}{- array[numeric] - target variable}

\item{prediction}{- array[numeric] - prediction of target variable}

\item{weight}{numeric - Vector of length \code{nrow(data)} contains weightings, if NULL even weighting is used}

\item{exposure_type}{-  character. either \code{'pdf'} or \code{'count'}. Method used to plot exposure}

\item{n_bins}{numeric - Vector of length 1 for 1D plot and 1 or 2 for 2D plots. This is the number of points to calculate the PDP for}

\item{use_plotly}{Optional: boolean - If TRUE plotly object is returned else ggplot2 object}
}
\value{

}
\description{
function to plot the prediction vs the actual over a given feature.
This allows analysis of how well the predictions fit over the feature.
This function DOES NOT give the marginal effect of a feature, this is due to correlations with other features
}
\examples{

plot_feature_predictions(feature=rep(1:10, each = 10),
feature_name= "Example",
actual=1:100,
prediction=1:100 + 10 * rnorm(100))

}
